#https://s3.eu-central-1.amazonaws.com/dh.cform-templates/openvpn/dh.cform.openvpn-launch-pub.yaml
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Launch Template EC2 Server for OpenVPN Implementation.
  A Nested Stack that comprises: 
  Bla Bla.
  Inputs include:
  Bla Bla.
  Outputs include:
  Bla Bla.
#-------------------------------------------

Metadata: {}
Conditions: {}


Parameters:
#===========================================

#--- AWS-Specific Parameter Type
#-------------------------------------------
  PublicSubnetIdA:
    Description: Public Subnet ID AZ-A
    Type: AWS::EC2::Subnet::Id
#-------------------------------------------
#--- Public Security Group Resource ID
#-------------------------------------------
  PublicSgResourceId:
    Description: Public Security Group ID AZ-A
    Type: AWS::EC2::SecurityGroup::Id
#-------------------------------------------


Resources:
#===========================================


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# PUBLIC EC2 DEFINITION
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#--- Public EC2 Instance
#-------------------------------------------
  PublicEC2Instance:
    Type: AWS::EC2::Instance
#.............................
    CreationPolicy:
      ResourceSignal:    
        Count: 1
        Timeout: "PT5M"
#.............................
    Properties:
#.............................
      Tags:
        -
          Key: "Name"
          Value: "openvpn-public"
#.............................
      AvailabilityZone:
        'Fn::Select':
          - '0'
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
#.............................
      DisableApiTermination: false
      IamInstanceProfile: "dh.InstProfile.Managed.SysAdmin"
      ImageId: "ami-0d4c3eabb9e72650a"
      InstanceType: "t2.micro"
      KeyName: !Sub "dh.SSH.Default_${AWS::Region}"
      Monitoring: false
#      SubnetId:
#        Ref: PublicSubnetIdA
#      SecurityGroupIds:
#        - !Ref PublicSgResourceId
#.............................
      BlockDeviceMappings: 
      - 
        DeviceName: "/dev/xvda"
        Ebs: 
          Encrypted: true
          VolumeSize: 8
          VolumeType: "gp2"
          DeleteOnTermination: true
#.............................
      NetworkInterfaces: 
      - 
        Description: "Primary Public NIC"
        DeleteOnTermination: true
        DeviceIndex: 0
        PrivateIpAddress: 10.0.128.10
        SubnetId: !Ref PublicSubnetIdA
        GroupSet: 
          - !Ref PublicSgResourceId
#.............................
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            # Update Packages, inc. aws-cfn-bootstrap
            yum update -y
            # Start cfn-init
            /opt/aws/bin/cfn-init -v --configsets Step1 --stack ${AWS::StackId} --resource PublicEC2Instance --region ${AWS::Region} || error_exit 'Failed to run cfn-init'
            # Start up the cfn-hup daemon to listen for changes to the EC2 instance metadata
            #/opt/aws/bin/cfn-hup || error_exit 'Failed to start cfn-hup'
            # All done so signal success
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource PublicEC2Instance --region ${AWS::Region}
#.............................
    Metadata:
      Comment: Metadata description here.
#,,,,,,,,,,,,,,
      AWS::CloudFormation::Authentication: 
        rolebased: 
          type: "S3"
          buckets: 
            - "dh.scripts"
          roleName: "dh.InstProfile.Managed.SysAdmin"
#,,,,,,,,,,,,,,
      AWS::CloudFormation::Init:
        configSets:
          Step1:
            - configRepo
            - configWebServer
            - configIPtables
            - configLogs
            - configHardenSsh
            - configOpenvpn
            - configEasyRSA
#,,,,,,,,,,,,,,,,,,,,,,,,,,,,
#        configTemplate:
#          packages: {}
#          groups: {}
#          users: {}
#          sources: {}
#          files: {}
#          commands: {}
#          services: {}
#,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        configRepo:
          commands:
            epel:
              command: "yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm"
#,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        configWebServer:
          packages:
            yum:
              httpd: []
          files:
            "/var/www/html/index.html":
              content: !Sub |
                <h1>Hello from ${AWS::StackId}<h1>
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
#,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        configIPtables:
          packages:
            yum:
              iptables-services: []
          sources:
            /tmp: "https://s3.eu-central-1.amazonaws.com/dh.scripts/iptables/dh.cform.openvpn-ec2-pub-iptables.sh.tar.gz"
          commands:
            iptables:
              cwd: "/tmp"
              command: "/bin/bash dh.cform.openvpn-ec2-pub-iptables.sh"
          services:
              iptables:
                enables: true
                ensureRunning: true
#,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        configLogs:
          files:
#---------------------------
            "/etc/rsyslog.d/30-iptables.conf":
              content: |
                :msg, startswith, "IPTlog" -/var/log/dh.vpn.svr.iptables.log
                & stop
              mode: '000644'
              owner: root
              group: root
#---------------------------
            "/etc/logrotate.d/dh.vpnlogs":
              content: |
                /var/log/dh.vpn.svr.*.log
                {
                 notifempty
                 rotate 21
                 maxsize 500k
                 daily
                 maxage 7
                 copytruncate
                 dateext
                 dateformat .%Y%m%d-%H-%s
                 compress
                 nomail
                 sharedscripts
                 postrotate
                   systemctl restart rsyslog.service
                 endscript
                }
              mode: '000644'
              owner: root
              group: root
#---------------------------
            "/etc/cron.d/dh.vpn.logSchedule":
              content: |
                */30 * * * * root /sbin/logrotate /etc/logrotate.d/dh.vpnlogs
              mode: '000644'
              owner: root
              group: root
          services:
              rsyslog:
                enables: true
                ensureRunning: true
                files:
                  - "/etc/rsyslog.d/30-iptables.conf"
#,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        configHardenSsh:
          packages:
            yum:
              fail2ban: []
          sources:
            /tmp: "https://s3.eu-central-1.amazonaws.com/dh.scripts/ssh/dh.cform.openvpn-ec2-pub-ssh.sh.tar.gz"
          files:
            "/etc/fail2ban/jail.local":
              content: |
                [sshd]
                enabled = true
                ignoreip = 127.0.0.1/8
                bantime = 600
                findtime = 600
                maxretry = 3
                banaction = iptables-multiport
              mode: '000644'
              owner: root
              group: root
          commands:
            HardenSsh:
              cwd: "/tmp"
              command: "/bin/bash dh.cform.openvpn-ec2-pub-ssh.sh"
              command: "systemctl start fail2ban.service;systemctl enable fail2ban.service"
          services:
              sshd:
                enables: true
                ensureRunning: true
                files:
                  - "/etc/ssh/sshd_config"
              fail2ban:
                enables: true
                ensureRunning: true
                files:
                  - "/etc/fail2ban/jail.local"
                packages: 
                  yum: 
                    - "fail2ban"
#,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        configOpenvpn:
          packages:
            yum:
              openvpn: []
          sources:
            /etc/openvpn/server: "https://s3.eu-central-1.amazonaws.com/dh.scripts/openvpn/server/dh.vpn.svr.xxx1194.conf.tar.gz"
          files:
            "/usr/local/bin/vpn-server-status":
              content: |
                #!/bin/bash
                systemctl status openvpn-server@dh.vpn.svr.udp1194
                systemctl status openvpn-server@dh.vpn.svr.tcp1194
                journalctl -u openvpn-server@dh.vpn.svr.udp1194
                journalctl -u openvpn-server@dh.vpn.svr.tcp1194
              mode: '000755'
              owner: ec2-user
              group: ec2-user
          commands:
            1a_gen-HMAC:
              cwd: "/etc/openvpn/server"
              command: "openvpn --genkey --secret HMAC-sig.key"
            1b_gen-HMAC:
              cwd: "/etc/openvpn/server"
              command: "aws s3 cp HMAC-sig.key s3://dh.scripts/openvpn/client/"
            2_enableLogTimestamps:
              cwd: "/usr/lib/systemd/system"
              command: "cp openvpn-server@.service openvpn-server@.service.bak;sed -i 's/ --suppress-timestamps//g' openvpn-server@.service"
            3_addPATH:
              command: |
                printf '\nPATH="/usr/local/bin:$PATH"\n' >> /home/ec2-user/.bashrc
          services:
              openvpn:
                enables: true
                ensureRunning: true
                files:
                  - "/etc/openvpn/server/dh.vpn.svr.udp1194.conf"
                  - "/etc/openvpn/server/dh.vpn.svr.tcp1194.conf"
#,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        configEasyRSA:
          packages:
            yum:
              easy-rsa: []
          sources:
            /usr/local/easy-rsa: "https://s3.eu-central-1.amazonaws.com/dh.scripts/easyrsa/openvpn/gen-reqs/dh.cform.easyrsa.vars.tar.gz"
          commands:
            1a_initPKI:
              command: "cp -r /usr/share/easy-rsa/3/* /usr/local/easy-rsa/"
            1b_initPKI:
              cwd: "/usr/local/easy-rsa"
              command: "./easyrsa init-pki"
            2a_genDH:
              cwd: "/usr/local/easy-rsa"
              command: "mv vars.gen-dh vars"
            2b_genDH:
              cwd: "/usr/local/easy-rsa"
              command: "./easyrsa gen-dh"
            2c_genDH:
              cwd: "/usr/local/easy-rsa/pki"
              command: "cp dh.pem /etc/openvpn/server/"
            3a_genSVR:
              cwd: "/usr/local/easy-rsa"
              command: "mv vars.dh.vpn.svr vars"
            3b_genSVR:
              cwd: "/usr/local/easy-rsa"
              command: "./easyrsa gen-req dh.vpn.svr nopass"
            3c_genSVR:
              cwd: "/usr/local/easy-rsa/pki/private"
              command: "cp dh.vpn.svr.key /etc/openvpn/server/"
            3d_genSVR:
              cwd: "/usr/local/easy-rsa/pki/reqs"
              command: "aws s3 cp dh.vpn.svr.req s3://dh.scripts/easyrsa/openvpn/sign-reqs/"
            4a_genClnt1:
              cwd: "/usr/local/easy-rsa"
              command: "mv vars.dh.vpn.client.pfSn-ravi vars"
            4b_genClnt1:
              cwd: "/usr/local/easy-rsa"
              command: "./easyrsa gen-req dh.vpn.client.pfSn-ravi nopass"
            4c_genClnt1:
              cwd: "/usr/local/easy-rsa/pki/private"
              command: "aws s3 cp dh.vpn.client.pfSn-ravi.key s3://dh.scripts/openvpn/client/"
            4d_genClnt1:
              cwd: "/usr/local/easy-rsa/pki/reqs"
              command: "aws s3 cp dh.vpn.client.pfSn-ravi.req s3://dh.scripts/easyrsa/openvpn/sign-reqs/"
            5a_genClnt2:
              cwd: "/usr/local/easy-rsa"
              command: "mv vars.dh.vpn.client.pfSn-virt vars"
            5b_genClnt2:
              cwd: "/usr/local/easy-rsa"
              command: "./easyrsa gen-req dh.vpn.client.pfSn-virt nopass"
            5c_genClnt2:
              cwd: "/usr/local/easy-rsa/pki/private"
              command: "aws s3 cp dh.vpn.client.pfSn-virt.key s3://dh.scripts/openvpn/client/"
            5d_genClnt2:
              cwd: "/usr/local/easy-rsa/pki/reqs"
              command: "aws s3 cp dh.vpn.client.pfSn-virt.req s3://dh.scripts/easyrsa/openvpn/sign-reqs/"


#          services: {}
#,,,,,,,,,,,,,,,,,,,,,,,,,,,,


#-------------------------------------------



Outputs: {}
#Outputs:
#===========================================


#---Top Level VPCID Export
#-------------------------------------------
#  PubLaunchTmpltId:
#    Description: ID of the launch template.
#    Value:
#      Ref: PublicLaunchTemplate
#    Export:
#      Name:
#        Fn::Sub: ${AWS::StackName}-VPCID
#---Public Subnet AZ-A Export
#-------------------------------------------