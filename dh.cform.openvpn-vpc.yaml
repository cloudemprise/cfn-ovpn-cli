# https://s3.eu-central-1.amazonaws.com/dh.cform-templates/openvpn/dh.cform.openvpn-vpc.yaml
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  A Nested Stack that comprises: 
  VPC Top Level Definition.
  Multi-AZ Private & Public Subnet Definitions.
  Internet Gateway Definition.
  NAT Gateway Definition.
  Multi-AZ Private & Public Route Table Definitions.
  Inputs include:
  VPC Top Level CIDR Definition.
  Private & Public Subnet CIDR Definitions.
  Outputs include:
  VPC ID
  Private Subnet IDs
  Public Subnet IDs
#-------------------------------------------


Metadata: {}
Conditions: {}


Parameters:
#===========================================

#--- CIDR Strings
#-------------------------------------------
  VPCCIDR:
    Description: Top Level VPC CIDR Block
    Type: String
#-------------------------------------------
  PublicSubnetACIDR:
    Description: Public Subnet CIDR Block AZ-A.
    Type: String
#-------------------------------------------
  PublicSubnetBCIDR:
    Description: Public Subnet CIDR Block AZ-B.
    Type: String
#-------------------------------------------
  PrivateSubnetACIDR:
    Description: Private Subnet CIDR Block AZ-A.
    Type: String
#-------------------------------------------
  PrivateSubnetBCIDR:
    Description: Private Subnet CIDR Block AZ-B.
    Type: String
#-------------------------------------------



Resources:
#===========================================

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# TOP LEVEL CIDR DEFINITION
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#--- VPC Definition
#-------------------------------------------
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock:
        Ref: VPCCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: 
            !Sub ${AWS::StackName}-VPC
#-------------------------------------------


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# SUBNET DEFINITIONS
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#--- AZ-A Public Subnet
#-------------------------------------------
  PublicSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock:
        Ref: PublicSubnetACIDR
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: VPC
      AvailabilityZone:
        'Fn::Select':
          - '0'
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: 
            !Sub ${AWS::StackName}-PubSubnetA

#--- AZ-B Public Subnet
#-------------------------------------------
  PublicSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock:
        Ref: PublicSubnetBCIDR
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: VPC
      AvailabilityZone:
        'Fn::Select':
          - '1'
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: 
            !Sub ${AWS::StackName}-PubSubnetB

#--- AZ1 Private Subnet
#-------------------------------------------
  PrivateSubnetA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock:
        Ref: PrivateSubnetACIDR
      MapPublicIpOnLaunch: false
      VpcId:
        Ref: VPC
      AvailabilityZone:
        'Fn::Select':
          - '0'
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: 
            !Sub ${AWS::StackName}-PrivSubnetA

#--- AZ-B Private Subnet
#-------------------------------------------
  PrivateSubnetB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock:
        Ref: PrivateSubnetBCIDR
      MapPublicIpOnLaunch: false
      VpcId:
        Ref: VPC
      AvailabilityZone:
        'Fn::Select':
          - '1'
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: 
            !Sub ${AWS::StackName}-PrivSubnetB
#-------------------------------------------


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ROUTE TABLE DEFINITIONS
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#--- Public Route Table
#-------------------------------------------
  RouteTablePublic:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Public Route Table
      Tags:
        - Key: Name
          Value: 
            !Sub ${AWS::StackName}-PubRoute
#-------------------------------------------
  RouteTablePublicAssociationA:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: RouteTablePublic
      SubnetId:
        Ref: PublicSubnetA
#-------------------------------------------
  RouteTablePublicAssociationB:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: RouteTablePublic
      SubnetId:
        Ref: PublicSubnetB
#-------------------------------------------
  RouteTablePublicRoute0:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId:
        Ref: RouteTablePublic
      GatewayId:
        Ref: Igw
#-------------------------------------------

#--- Private A Route Table
#-------------------------------------------
  RouteTablePrivateA:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: 
            !Sub ${AWS::StackName}-PrivRouteA
#-------------------------------------------
  RouteTablePrivateAAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: RouteTablePrivateA
      SubnetId:
        Ref: PrivateSubnetA
#-------------------------------------------
#  RouteTablePrivateARoute0:
#    Type: 'AWS::EC2::Route'
#    Properties:
#      DestinationCidrBlock: 0.0.0.0/0
#      RouteTableId:
#        Ref: RouteTablePrivateA
#      NatGatewayId:
#        Ref: NatGw1
#-------------------------------------------

#--- Private B Route Table
#-------------------------------------------
  RouteTablePrivateB:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: 
            !Sub ${AWS::StackName}-PrivRouteB
#-------------------------------------------
  RouteTablePrivateBAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: RouteTablePrivateB
      SubnetId:
        Ref: PrivateSubnetB
#-------------------------------------------
#  RouteTablePrivateBRoute0:
#    Type: 'AWS::EC2::Route'
#    Properties:
#      DestinationCidrBlock: 0.0.0.0/0
#      RouteTableId:
#        Ref: RouteTablePrivateB
#      NatGatewayId:
#        Ref: NatGw1
#-------------------------------------------


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# GATEWAY DEFINITIONS
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#--- Internet Gateway
#-------------------------------------------
  Igw:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
#-------------------------------------------
  IGWAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: Igw
#-------------------------------------------


#--- NAT Gateway
#-------------------------------------------
#  NatGw1:
#    Type: 'AWS::EC2::NatGateway'
#    Properties:
#      SubnetId:
#        Ref: PublicSubnetA
#      AllocationId:
#        'Fn::GetAtt':
#          - NatGw1ElasticIP
#          - AllocationId
#-------------------------------------------
#  NatGw1ElasticIP:
#    Type: 'AWS::EC2::EIP'
#    Properties:
#      Domain: vpc
#-------------------------------------------


#Outputs: {}
Outputs:
#===========================================


#---Top Level VPCID Export
#-------------------------------------------
  VPCID:
    Description: VPC ID
    Value:
      Ref: VPC
#    Export:
#      Name:
#        Fn::Sub: ${AWS::StackName}-VPCID
#---Public Subnet AZ-A Export
#-------------------------------------------
  PublicSubnetIdA:
    Description: Public Subnet ID AZ-A
    Value:
      Ref: PublicSubnetA
#    Export:
#      Name: 
#        Fn::Sub: ${AWS::StackName}-PublicSubnetIdA
#---Public Subnet AZ-B Export
#-------------------------------------------
  PublicSubnetIdB:
    Description: Public Subnet ID AZ-B
    Value:
      Ref: PublicSubnetB
#    Export:
#      Name: 
#        Fn::Sub: ${AWS::StackName}-PublicSubnetIdB
#---Private Subnet AZ-A Export
#-------------------------------------------
  PrivateSubnetIdA:
    Description: Private Subnet ID AZ-A
    Value:
      Ref: PrivateSubnetA
#    Export:
#      Name: 
#        Fn::Sub: ${AWS::StackName}-PrivateSubnetIdA
#---Private Subnet AZ-B Export
#-------------------------------------------
  PrivateSubnetIdB:
    Description: Private Subnet ID AZ-B
    Value:
      Ref: PrivateSubnetB
#    Export:
#      Name: 
#        Fn::Sub: ${AWS::StackName}-PrivateSubnetIdB
#-------------------------------------------
